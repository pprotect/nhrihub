script#file_selector_template(type='text/ractive' src='../../../../../../app/views/shared/_file_selector_template.html')

.row.well.well-sm.well.complaint
  .col-md-12
    .row.basic_info
      .col-md-2
        .row
          .col-md-12
            label {{ t.case_reference }}
            span.case_reference(style='margin-left:12px;') {{ case_reference }}
      .col-md-7
        .row
          .col-md-3
            label {{ t.date_received }}
          .col-md-9.date_received {{formatted_date}}
        .row
          .col-md-3
            label {{ t.current_assignee }}
          .col-md-9
            span.current_assignee {{ current_assignee_name }}
        .row
          .col-md-3
            label {{ t.timeline }}
          .col-md-9
            #timeline
              | {{#timeline_events_recent_first}}
              <showTimelineEvent event_label='{{event_label}}' status_memo='{{status_memo}}' event_description='{{event_description}}' date='{{date}}' user_name='{{user_name}}' />
              | {{/timeline_events_recent_first}}
        .row
          .col-md-3
            label {{ t.complainant }}
          .col-md-9
            | {{#title}}
            span.title {{ title }}
            | {{/title}}
            span.firstName {{ firstName }}
            span.lastName {{ lastName }}
      .col-md-3.actions
        .row(style = "margin-left:0px;")
          .col-md-1.col-md-offset-2
            .i.eye_icon.show_complaint('on-click' = '@this.show_complaint()', 'data-toggle' = 'tooltip', title='{{t.show_complaint}}')
          .col-md-1
            .alarm_icon.counter('data-count'="{{reminders_count}}", 'on-click' = "@this.show_reminders_panel()", 'data-toggle' = 'tooltip', title = '{{ t.reminders }}')
          .col-md-1
            .note_icon.show_notes.counter('data-count'='{{notes_count}}', 'on-click' = "@this.show_notes_panel()", 'data-toggle' = 'tooltip', title = '{{ t.notes }}')
          .col-md-1
            i.fa.fa-comments-o.fa-lg.counter('data-count'='{{communications_count}}', 'on-click' = '@this.show_communications_panel()', style = "position:relative;", 'data-toggle' = 'tooltip', title = '{{ t.communications }}')
          .col-md-1
            i.fa-sm.delete_icon('on-click'='@this.show_confirm_delete_modal()', 'data-toggle' = 'tooltip', title = '{{ t.delete }}')
          .col-md-1
            i.fa.fa-sm.fa-file-word-o.word_document('on-click'='@this.generate_word_doc()', 'data-toggle' = 'tooltip', title = '{{ t.download }}')

style.
  .firstName, .title {margin-right: .25em;}

script(type='text/javascript').
  import ComplaintDocuments from './complaint_documents'
  import ConfirmDeleteModal from 'confirm_delete_modal'
  import 'jquery-ui/ui/widgets/datepicker'
  import translations from 'translations.js'
  import Communications from 'communications.ractive.pug'
  import ShowTimelineEvent from 'show_timeline_event.ractive.pug'
  import reminders from 'reminders.ractive.pug'
  import notes from 'notes.ractive.pug'
  import Remindable from 'remindable.coffee'
  import Notable from 'notable.coffee'
  import 'bootstrap'

  export default Ractive.extend({
    template : $TEMPLATE,
    css: $CSS,
    computed : {
      timeline_events_recent_first(){
        return _(this.get('timeline_events')).sortBy(function(sc){return -$.datepicker.formatDate('@',new Date(sc.change_date)) });
      },
      delete_confirmation_message() {
        return `${i18n.delete_complaint_confirmation_message} ${this.get('case_reference')}?`;
      },
      reminders_count() {
        const reminders = this.get('reminders');
        if (_.isUndefined(reminders)) { return 0; } else { return reminders.length; }
      },
      notes_count() {
        const notes = this.get('notes');
        if (_.isUndefined(notes)) { return 0; } else { return notes.length; }
      },
      communications_count() {
        const comms = this.get('communications');
        if (_.isUndefined(comms)) { return 0; } else { return comms.length; }
      },
      url() {
        return Routes.complaint_path(current_locale, this.get('id')); 
      },
      formatted_date : {
        get() {
          const date_received = this.get('date'); // it's a formatted version of date_received
          if (_.isEmpty(date_received)) {
            return "";
          } else {
            return this.get('date');
          }
        },
        set(val){
          return this.set('date', val);
        }
      },
      create_reminder_url() {
        return Routes.complaint_reminders_path('en', this.get('id')); 
      },
      create_note_url() {
        return Routes.complaint_notes_path('en', this.get('id')); 
      },
    },
    data : function(){ return {
      t : translations.t('complaint')
    }},
    components : {
      attachedDocuments : ComplaintDocuments,
      showTimelineEvent : ShowTimelineEvent,
    },
    generate_word_doc() {
      return window.location = Routes.complaint_path('en',this.get('id'),{format : 'docx'});
    },
    show_complaint(){
      var url = Routes.complaint_path(current_locale, this.get('id'));
      window.location = url;
    },
    remove(guid){
      // required for Ractive 0.8.0, possibly can be removed in later revs
      const guids = _(this.findAllComponents('attachedDocument')).pluck('_guid');
      const index = _(guids).indexOf(guid);
      return this.splice('attached_documents',index,1);
    },
    delete_callback(data,textStatus,jqxhr){
      return this.parent.remove(this._guid);
    },
  })
  .extend(ConfirmDeleteModal)
  .extend(Remindable)
  .extend(Notable)
  .extend(Communications)
