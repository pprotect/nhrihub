#complaint

:coffeescript
  @source_areas = #{@areas.to_json.html_safe}
  @source_subareas = #{@subareas.to_json.html_safe}
  @source_all_mandates = #{@mandates.to_json.html_safe}
  @source_all_agencies = #{@agencies.to_json.html_safe}
  @source_complaint_bases = #{(@complaint_bases || []).map(&:to_h).to_json.html_safe}
  @source_next_case_reference = "#{@next_case_reference}"
  @source_all_users = #{@users.to_json(:only => :id, :methods => :first_last_name).html_safe}
  @source_all_staff = #{@staff.to_json.html_safe}
  @source_permitted_filetypes = #{@permitted_filetypes.to_json.html_safe}
  @source_maximum_filesize = #{@maximum_filesize}
  @source_communication_permitted_filetypes = #{@communication_permitted_filetypes.to_json.html_safe}
  @source_communication_maximum_filesize = #{@communication_maximum_filesize}
  @source_statuses = #{@statuses.to_json.html_safe}
  @source_filter_criteria = #{@filter_criteria.to_json.html_safe}
  @i18n =
    tooltip_messages:
      face_to_face : "#{t('.face_to_face')}"
      letter: "#{t('.letter')}"
      phone: "#{t('.phone')}"
      email: "#{t('.email')}"
      sent: "#{t('.sent')}"
      received: "#{t('.received')}"
    delete_communication_confirmation_message: "#{t('.delete_communication_confirmation_message')}"
    delete_complaint_confirmation_message: "#{t('.delete_complaint_confirmation_message')}"
    delete_document_confirmation_message: "#{t('.delete_document_confirmation_message')}"
    heading : "#{@title}"
  @complaint_data = #{Complaint.new.to_json.html_safe}
  @edit = true
  @type = "#{@type}"
  @mode = "new_#{@type}_complaint"

-content_for :assets do
  = stylesheet_link_tag 'complaints'
  = javascript_pack_tag 'complaint'
