.row.filter_control_box#projects_controls
  .row
    .col-md-12
      h4
        | {{ t.search }}
  .row.labels
    .col-md-3
      | {{ t.title }}
    .col-md-3
      | {{ t.mandate }}
    .col-md-3
      | {{ t.project_type }}
  .row(style = "margin-bottom:12px;")
    .col-md-3
      input.form-control#title(type='text', autocomplete='off', name='title', value="{{filter_criteria.title}}", placeholder= "{{t.enter_text}}")
    .col-md-3
      .btn-group.select(style="width:240px;")
        button.btn.btn-default.dropdown-toggle( type='button', data-toggle='dropdown' )
          span.filter-option.pull-left
            | {{ t.select_mandate }}
          span.caret
        ul.dropdown-menu#mandate_filter_select
          <customCheckbox collection='{{filter_criteria.mandate_ids}}' select_attribute='mandate' id='0' name='Undesignated'/>
          | {{#all_mandates}}
          <customCheckbox collection='{{filter_criteria.mandate_ids}}' id='{{id}}' select_attribute='mandate' name='{{name}}'/>
          | {{/all_mandates}}
    .col-md-3
      .btn-group.select( style="width:240px;" )
        button.btn.btn-default.dropdown-toggle( type='button', data-toggle='dropdown' )
          span.filter-option.pull-left
            | {{ t.select_project_type }}
          span.caret
        ul.dropdown-menu#subarea_filter_select
          <selectClear t='{{t}}' collection='{{'subarea_ids'}}'/>
          <undesignatedSubareaFilterSelect collection='{{filter_criteria.subarea_ids}}' select_attribute='subarea' id='0' name='Undesignated'/>
          | {{#areas}}
          li.dropdown-header( style="padding: 3px 0px 3px 20px;" )
            | {{name}}
            ul( id='{{name.underscore()}}_subareas' style= "list-style:none; padding-left:18px;" )
              | {{#subareas}}
              <customCheckbox collection='{{filter_criteria.subarea_ids}}' id='{{id}}' select_attribute='subarea' name='{{name}}'/>
              | {{/subareas}}
          | {{/areas}}
    .col-md-1.col-md-offset-1
      i.erase.fa.fa-refresh( on-click='clear_filter()', data-toggle='tooltip', title='{{ t.clear }}' )
    .col-md-1
      | {{#if expanded}}
      a#compact( on-click='compact()', data-toggle='tooltip', title='{{ t.compact_all }}' )
      | {{else}}
      a#expand( on-click='expand()', data-toggle='tooltip', title='{{ t.expand_all }}' )
      | {{/if}}
  .row.labels
    .col-md-3
      | {{ t.performance_indicators }}
  .row
    .col-md-3
      .btn-group.performance_indicator_select.select( style="width:240px;" )
        button.btn.btn-default.dropdown-toggle( type="button", data-toggle='dropdown' )
          span.filter-option.pull-left
            | {{ t.select_performance_indicators }}
          span.caret
        <performanceIndicatorsFilterSelect filter_criteria='{{filter_criteria}}' default_filter_criteria='{{default_filter_criteria}}' planned_results='{{planned_results}}' />

style.
  #title {
    width:240px;
    position:relative;
    height:34px;
   }

style
  include:scss /filter_controls.scss

style.
  li.area_select{padding-left: 19px;}
  ul#subarea_filter_select{ width: 280px;}
  ul#mandate_filter_select{ padding-left: 12px;}

script.
  import translations from '../translations.js'
  import SelectClear from 'select_clear.ractive.pug'
  import PerformanceIndicatorsFilterSelect from  'performance_indicators_filter_select.ractive.pug'
  import UndesignatedSubareaFilterSelect from './undesignated_subarea_filter_select.ractive.pug'
  import CustomCheckbox from 'custom_checkbox.ractive.pug'
  import 'bootstrap'

  export default Ractive.extend({
    template: $TEMPLATE,
    css: $CSS,
    data : function(){ return {
      t : translations
    }},
    observe: {
      'filter_criteria': {
        handler(value, old, path, idx){
          if(!_.isUndefined(old)){
            this.parent.load();
          }
        }
      }
    },
    components: {
      undesignatedSubareaFilterSelect: UndesignatedSubareaFilterSelect,
      selectClear: SelectClear,
      performanceIndicatorsFilterSelect: PerformanceIndicatorsFilterSelect,
      customCheckbox: CustomCheckbox
    },
    select_all: function(collection) {
      var subarea_ids;
      subarea_ids = _(subareas).map(function(s) {
        return s.id;
      });
      subarea_ids.push(0); // the 'undesignated' subarea
      return this.set('filter_criteria.' + collection, subarea_ids);
    },
    clear_all: function(collection) {
      return this.set('filter_criteria.' + collection, []);
    },
    expand: function() {
      return this.parent.expand();
    },
    compact: function() {
      return this.parent.compact();
    },
    clear_filter: function() {
      console.log("reset filter")
      window.history.pushState({
        foo: "bar"
      }, "unused title string", window.location.origin + window.location.pathname);
      return this.set('filter_criteria', $.extend({},window.default_filter_criteria));
    },
    set_filter_from_query_string: function() {
      var filter_criteria, search_string;
      search_string = (_.isEmpty(window.location.search) || _.isNull(window.location.search)) ? '' : window.location.search.split("=")[1].replace(/\+/g, ' ');
      filter_criteria = _.extend(window.filter_criteria, {
        title: unescape(search_string)
      });
      return this.set('filter_criteria', filter_criteria);
    }
  });

