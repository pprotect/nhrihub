%script#note_template{:type => 'text/ractive'}
  {{#if !persisted }}
  {{> new_note_template }}
  {{else}}
  {{> show_note_template }}
  {{/if}}

%script#new_note_template{:type => 'text/ractive'}
  .form-horizontal#new_note
    .row
      .col-sm-2.col-md-offset-2
        %span.required_before=t('required')
    .form-group#text{:class => '{{#text_error}}has-error{{/}}'}
      %label.control-label.topaligned.col-sm-2.required= t('.text')
      .col-sm-10
        =text_area :note, :text, :size=>"78x4", :class => 'form-control', :style => "width:70%", :value => '{{text}}', 'on-keydown'=>"@this.remove_errors('text')".html_safe
        %span.help-block= t('.note_text_error_message')
    .form-group
      .col-sm-3.col-sm-offset-3{:style => "text-align:center;"}
        .btn.btn-danger.btn-sm#cancel_note{"on-click" => "@this.cancel_note()".html_safe}
          %i.fa.fa-remove.fa-lg{:style => "color:white"}
          %span{:style => "color:white"}= t("defaults.cancel")
      .col-sm-3{:style => "text-align:center;"}
        .btn.btn-success.btn-sm#save_note{:style => "color:white;", "on-click" => "@this.save_note()".html_safe}
          %i.fa.fa-check.fa-lg{:style => "color:white"}
          %span= t("defaults.save")

%script#show_note_template{:type => 'text/ractive'}
  .note.row.editable_container{:id => "note_editable{{id}}", 'as-note_edit'=>'id'}
    .col-md-1.date.form-group{:style => "width:15%"}
      %span {{ date }}
    .col-md-6.text.form-group{:class => '{{#text_error}}has-error{{/}}', :style => "width:65%", 'data-toggle'=>'edit', 'data-id'=>'{{id}}', 'data-attribute'=>'text'}
      %div
        .fade.no_edit.in
          %span {{text}}
        .fade.edit{:style => "height:140px;"}
          %textarea#note_text.form-control{:name => 'note[text]', :cols=>78, :rows=>4, :value => '{{text}}', 'on-keydown'=>"@this.remove_errors('text')".html_safe}
          %span.help-block{:style => "font-size:0.8em; padding-left:4px; position:relative; top:-8px; width:100%; background-color:#fff"}= t('.note_text_error_message')
    .col-md-1.icon.note_info{:style => "width:5%"}
      %i.fa.fa-info-circle.fa-lg{'as-popover'=>true}
    .col-md-1.icon{:style => "text-align:center; font-size:14px; height:20px; width:5%", 'data-toggle' => 'edit'}
      .fade.edit
        %i.fa.fa-remove.fa-lg#edit_cancel{:style => "position:relative;"}
    .col-md-1.icon{:style => "text-align:center; font-size:14px; width:5%", 'data-toggle' => 'edit'}
      .fade.edit
        %i.fa.fa-check.fa-lg#edit_save
      .fade.no_edit.in{:style => "left:-14px;"}
        %i.fa.fa-pencil-square-o.fa-lg#edit_start
    .col-md-1{:style => "text-align:center; font-size:14px; width:5%;"}
      %i.fa.fa-trash-o.fa-lg#delete_note{'on-click' => '@this.show_confirm_delete_modal()'.html_safe, :style => "position:relative; left:-12px; top:-2px;"}

%div#popover_template{:style=>"display: none"}
  .popover.fileDetails{:role=>"tooltip"}
    .arrow
    %h3.popover-title
    .popover-content

%div#detailsTitle{:style=>"display: none"}
  %span{:style => 'z-index:20'}= t('.popover.details')

%script#detailsContent{:type => 'text/ractive'}
  - scope = 'notes.note.popover'
  %table#details{:style => 'width:200px'}
    %tr
      %td= t('created_on', :scope => scope)
      %td#created_on {{ date }}
    %tr
      %td= t('author', :scope => scope)
      %td#author {{ author_name }}
    %tr
      %td= t('updated_on', :scope => scope)
      %td#updated_on {{ updated_on }}
    %tr
      %td= t('updated_by', :scope => scope)
      %td#editor {{ editor_name }}

#note

:coffeescript
  $ ->
    NoteEdit = (node,id)->
      ractive = @
      @edit = new InpageEdit
        on : node
        object : @
        focus_element : 'input.title'
        success : (response, textStatus, jqXhr)->
          @.options.object.set(response)
          @load()
        error : ->
          console.log "Changes were not saved, for some reason"
      return {
        teardown : (id)->
        update : (id)->
        }

    Ractive.decorators.note_edit = NoteEdit

    Note = Ractive.extend
      template : '#note_template'
      computed :
        persisted : ->
          !isNaN(parseInt(@get('id')))
        truncated_text : ->
          @get('text').split(' ').slice(0,4).join(' ')+"..."
        delete_confirmation_message : ->
          "#{t('.confirm_delete')}"+"'"+@get('truncated_text')+"'"+"?"
      save_note : ->
        url = @parent.get('create_note_url')
        data = $(@find('#new_note')).find(':input').serializeArray()
        if @validate(data)
          $.ajax
            type : 'post'
            url : url
            data : data
            dataType : 'json'
            success : @create_note
            context : @
      cancel_note : ->
        @parent.pop('notes')
      terminate_edit : ->
        @editor.edit_cancel($(@find('*')))
      delete_callback : (response, statusText, jqxhr)->
        @parent.set('notes',response)
        @get('parent').set('notes',response)
      validate : ->
        @_validate('text')
      _validate : (field)->
        if _.isString(@get(field))
          @set(field, @get(field).trim())
        value = @get(field)
        if _.isArray(value) && value.length == 0
          @set(field+'_error',true)
          false
        else if value == "" || _.isNull(value)
          @set(field+'_error',true)
          false
        else
          true
      create_note : (response, statusText, jqxhr)->
        @parent.set('notes',response)
        @get('parent').set('notes',response)
      remove_errors : (field)->
        if _.isUndefined(field) # after edit, failed save, and cancel, remove all errors
          error_attrs = _(_(@get()).keys()).select (k)-> k.match(/error/)
          _(error_attrs).each (a)=> @set(a,false)
        else # user types into input or changes select
          @set(field+"_error",false)
    .extend ConfirmDeleteModal

    window.notes = new Ractive
      el: '#note'
      template : "#notes_template"
      data :
        notes : []
        fade : window.env != "test"
      close : (ev)->
        self = ev.data.self
        if (self._new_note_is_active())
          self.pop('notes')
        self.terminate_edits()
      terminate_edits : ->
        notes = @findAllComponents('note')
        _(notes).each((note)-> note.terminate_edit())
      onrender : ->
        $(@find("#notes_modal")).bind('hidden.bs.modal',{self : this}, @close)
      new_note : ->
        unless @_new_note_is_active()
          @push('notes',{id:null, type:null, frequency:null, text:'', notable_id:@get('id')})
      _new_note_is_active : ->
        notes = @findAllComponents('note')
        (notes.length > 0) && _.isNull( notes[notes.length - 1].get('id'))
      onModalClose : ->
        if @_new_note_is_active()
          @pop('notes')

    Popover = (node)->
      $(node).popover
        html : true,
        title : ->
          $('#detailsTitle').html()
        content : ->
          data = Ractive.getNodeInfo(@).ractive.get()
          ractive = new Ractive
            template : '#detailsContent'
            data : data
          ractive.toHTML()
        template : $('#popover_template').html()
        sanitize: false
        trigger: 'hover'
      teardown: ->
        $(node).off('mouseenter')

    Ractive.decorators.popover = Popover
    Ractive.components.note = Note

%script#notes_template{:type => 'ractive/template'}
  <modal-custom fade='{{fade}}' id="notes_modal" type="xl" data-backdrop='true' data-keyboard='true' >
  <modal-header>
  <h4>#{t('.notes')}<modal-close/></h4>
  </modal-header>
  <modal-body>
  <i class="fa fa-plus fa-sm" id="add_note" on-click='@this.new_note()' data-toggle="tooltip" data-placement="bottom" title="add note"/>
  #notes{:style => "margin-bottom:80px;"}
    .row
      %h5.col-md-1{:style => "width:15%;"}= t('.date')
      %h5.col-md-1{:style => "width:70%;"}= t('.text')
    {{#notes}}
    <note url='{{url}}' parent='{{parent}}' id='{{id}}' date='{{date}}' author_name='{{author_name}}' updated_on='{{updated_on}}' editor_name='{{editor_name}}' text='{{text}}'/>
    {{/notes}}
  </modal-body>
  </modal-custom>

